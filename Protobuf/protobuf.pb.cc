// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf.proto

#include "protobuf.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace protocol {
PROTOBUF_CONSTEXPR Mensagem::Mensagem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.msg_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.resp_msg_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.nome_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.conteudo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.resp_conteudo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_)*/0
  , /*decltype(_impl_.num1_)*/0
  , /*decltype(_impl_.num2_)*/0
  , /*decltype(_impl_.soma_)*/0} {}
struct MensagemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MensagemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MensagemDefaultTypeInternal() {}
  union {
    Mensagem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MensagemDefaultTypeInternal _Mensagem_default_instance_;
}  // namespace protocol
static ::_pb::Metadata file_level_metadata_protobuf_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_protobuf_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_protobuf_2eproto = nullptr;

const uint32_t TableStruct_protobuf_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::protocol::Mensagem, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::protocol::Mensagem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::protocol::Mensagem, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::protocol::Mensagem, _impl_.msg_),
  PROTOBUF_FIELD_OFFSET(::protocol::Mensagem, _impl_.resp_msg_),
  PROTOBUF_FIELD_OFFSET(::protocol::Mensagem, _impl_.nome_),
  PROTOBUF_FIELD_OFFSET(::protocol::Mensagem, _impl_.conteudo_),
  PROTOBUF_FIELD_OFFSET(::protocol::Mensagem, _impl_.resp_conteudo_),
  PROTOBUF_FIELD_OFFSET(::protocol::Mensagem, _impl_.num1_),
  PROTOBUF_FIELD_OFFSET(::protocol::Mensagem, _impl_.num2_),
  PROTOBUF_FIELD_OFFSET(::protocol::Mensagem, _impl_.soma_),
  ~0u,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 15, -1, sizeof(::protocol::Mensagem)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::protocol::_Mensagem_default_instance_._instance,
};

const char descriptor_table_protodef_protobuf_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016protobuf.proto\022\010protocol\"\226\002\n\010Mensagem\022"
  "\n\n\002id\030\001 \001(\005\022\020\n\003msg\030\002 \001(\tH\000\210\001\001\022\025\n\010resp_ms"
  "g\030\003 \001(\tH\001\210\001\001\022\021\n\004nome\030\004 \001(\tH\002\210\001\001\022\025\n\010conte"
  "udo\030\005 \001(\tH\003\210\001\001\022\032\n\rresp_conteudo\030\006 \001(\tH\004\210"
  "\001\001\022\021\n\004num1\030\007 \001(\005H\005\210\001\001\022\021\n\004num2\030\010 \001(\005H\006\210\001\001"
  "\022\021\n\004soma\030\t \001(\005H\007\210\001\001B\006\n\004_msgB\013\n\t_resp_msg"
  "B\007\n\005_nomeB\013\n\t_conteudoB\020\n\016_resp_conteudo"
  "B\007\n\005_num1B\007\n\005_num2B\007\n\005_somaB\013B\tProtocolo"
  "b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_protobuf_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_protobuf_2eproto = {
    false, false, 328, descriptor_table_protodef_protobuf_2eproto,
    "protobuf.proto",
    &descriptor_table_protobuf_2eproto_once, nullptr, 0, 1,
    schemas, file_default_instances, TableStruct_protobuf_2eproto::offsets,
    file_level_metadata_protobuf_2eproto, file_level_enum_descriptors_protobuf_2eproto,
    file_level_service_descriptors_protobuf_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_protobuf_2eproto_getter() {
  return &descriptor_table_protobuf_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_protobuf_2eproto(&descriptor_table_protobuf_2eproto);
namespace protocol {

// ===================================================================

class Mensagem::_Internal {
 public:
  using HasBits = decltype(std::declval<Mensagem>()._impl_._has_bits_);
  static void set_has_msg(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_resp_msg(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_nome(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_conteudo(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_resp_conteudo(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_num1(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_num2(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_soma(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

Mensagem::Mensagem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:protocol.Mensagem)
}
Mensagem::Mensagem(const Mensagem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Mensagem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.msg_){}
    , decltype(_impl_.resp_msg_){}
    , decltype(_impl_.nome_){}
    , decltype(_impl_.conteudo_){}
    , decltype(_impl_.resp_conteudo_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.num1_){}
    , decltype(_impl_.num2_){}
    , decltype(_impl_.soma_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_msg()) {
    _this->_impl_.msg_.Set(from._internal_msg(), 
      _this->GetArenaForAllocation());
  }
  _impl_.resp_msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.resp_msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_resp_msg()) {
    _this->_impl_.resp_msg_.Set(from._internal_resp_msg(), 
      _this->GetArenaForAllocation());
  }
  _impl_.nome_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nome_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_nome()) {
    _this->_impl_.nome_.Set(from._internal_nome(), 
      _this->GetArenaForAllocation());
  }
  _impl_.conteudo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.conteudo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_conteudo()) {
    _this->_impl_.conteudo_.Set(from._internal_conteudo(), 
      _this->GetArenaForAllocation());
  }
  _impl_.resp_conteudo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.resp_conteudo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_resp_conteudo()) {
    _this->_impl_.resp_conteudo_.Set(from._internal_resp_conteudo(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.soma_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.soma_));
  // @@protoc_insertion_point(copy_constructor:protocol.Mensagem)
}

inline void Mensagem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.msg_){}
    , decltype(_impl_.resp_msg_){}
    , decltype(_impl_.nome_){}
    , decltype(_impl_.conteudo_){}
    , decltype(_impl_.resp_conteudo_){}
    , decltype(_impl_.id_){0}
    , decltype(_impl_.num1_){0}
    , decltype(_impl_.num2_){0}
    , decltype(_impl_.soma_){0}
  };
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.resp_msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.resp_msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.nome_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nome_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.conteudo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.conteudo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.resp_conteudo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.resp_conteudo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Mensagem::~Mensagem() {
  // @@protoc_insertion_point(destructor:protocol.Mensagem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Mensagem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.msg_.Destroy();
  _impl_.resp_msg_.Destroy();
  _impl_.nome_.Destroy();
  _impl_.conteudo_.Destroy();
  _impl_.resp_conteudo_.Destroy();
}

void Mensagem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Mensagem::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.Mensagem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.msg_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.resp_msg_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.nome_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.conteudo_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.resp_conteudo_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.id_ = 0;
  if (cached_has_bits & 0x000000e0u) {
    ::memset(&_impl_.num1_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.soma_) -
        reinterpret_cast<char*>(&_impl_.num1_)) + sizeof(_impl_.soma_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Mensagem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "protocol.Mensagem.msg"));
        } else
          goto handle_unusual;
        continue;
      // optional string resp_msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_resp_msg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "protocol.Mensagem.resp_msg"));
        } else
          goto handle_unusual;
        continue;
      // optional string nome = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_nome();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "protocol.Mensagem.nome"));
        } else
          goto handle_unusual;
        continue;
      // optional string conteudo = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_conteudo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "protocol.Mensagem.conteudo"));
        } else
          goto handle_unusual;
        continue;
      // optional string resp_conteudo = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_resp_conteudo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "protocol.Mensagem.resp_conteudo"));
        } else
          goto handle_unusual;
        continue;
      // optional int32 num1 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _Internal::set_has_num1(&has_bits);
          _impl_.num1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 num2 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _Internal::set_has_num2(&has_bits);
          _impl_.num2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 soma = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _Internal::set_has_soma(&has_bits);
          _impl_.soma_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Mensagem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protocol.Mensagem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // optional string msg = 2;
  if (_internal_has_msg()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.Mensagem.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  // optional string resp_msg = 3;
  if (_internal_has_resp_msg()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resp_msg().data(), static_cast<int>(this->_internal_resp_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.Mensagem.resp_msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_resp_msg(), target);
  }

  // optional string nome = 4;
  if (_internal_has_nome()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nome().data(), static_cast<int>(this->_internal_nome().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.Mensagem.nome");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_nome(), target);
  }

  // optional string conteudo = 5;
  if (_internal_has_conteudo()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_conteudo().data(), static_cast<int>(this->_internal_conteudo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.Mensagem.conteudo");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_conteudo(), target);
  }

  // optional string resp_conteudo = 6;
  if (_internal_has_resp_conteudo()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resp_conteudo().data(), static_cast<int>(this->_internal_resp_conteudo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "protocol.Mensagem.resp_conteudo");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_resp_conteudo(), target);
  }

  // optional int32 num1 = 7;
  if (_internal_has_num1()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_num1(), target);
  }

  // optional int32 num2 = 8;
  if (_internal_has_num2()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(8, this->_internal_num2(), target);
  }

  // optional int32 soma = 9;
  if (_internal_has_soma()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(9, this->_internal_soma(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.Mensagem)
  return target;
}

size_t Mensagem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.Mensagem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string msg = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_msg());
    }

    // optional string resp_msg = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_resp_msg());
    }

    // optional string nome = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_nome());
    }

    // optional string conteudo = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_conteudo());
    }

    // optional string resp_conteudo = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_resp_conteudo());
    }

  }
  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  if (cached_has_bits & 0x000000e0u) {
    // optional int32 num1 = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num1());
    }

    // optional int32 num2 = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num2());
    }

    // optional int32 soma = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_soma());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Mensagem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Mensagem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Mensagem::GetClassData() const { return &_class_data_; }


void Mensagem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Mensagem*>(&to_msg);
  auto& from = static_cast<const Mensagem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protocol.Mensagem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_msg(from._internal_msg());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_resp_msg(from._internal_resp_msg());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_nome(from._internal_nome());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_conteudo(from._internal_conteudo());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_resp_conteudo(from._internal_resp_conteudo());
    }
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (cached_has_bits & 0x000000e0u) {
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.num1_ = from._impl_.num1_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.num2_ = from._impl_.num2_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.soma_ = from._impl_.soma_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Mensagem::CopyFrom(const Mensagem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.Mensagem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mensagem::IsInitialized() const {
  return true;
}

void Mensagem::InternalSwap(Mensagem* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_, lhs_arena,
      &other->_impl_.msg_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.resp_msg_, lhs_arena,
      &other->_impl_.resp_msg_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.nome_, lhs_arena,
      &other->_impl_.nome_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.conteudo_, lhs_arena,
      &other->_impl_.conteudo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.resp_conteudo_, lhs_arena,
      &other->_impl_.resp_conteudo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Mensagem, _impl_.soma_)
      + sizeof(Mensagem::_impl_.soma_)
      - PROTOBUF_FIELD_OFFSET(Mensagem, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Mensagem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_protobuf_2eproto_getter, &descriptor_table_protobuf_2eproto_once,
      file_level_metadata_protobuf_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protocol::Mensagem*
Arena::CreateMaybeMessage< ::protocol::Mensagem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protocol::Mensagem >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
